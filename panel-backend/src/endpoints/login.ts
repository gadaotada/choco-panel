import { Router } from "express";
import * as Yup from 'yup';

import { timeStampGen, validateData } from '../global-helper';
import { getUser } from "./helpers/data-get";

const loginValidationSchema = Yup.object().shape({
   username: Yup.string().required('Name is required').min(3, 'Name has to include at least 3 characters').max(20, 'Name has to include at most 20 characters'),
   password: Yup.string().required('Password is required').min(6, 'Password has to include at least 6 characters')
});

const router = Router();

router.post('/login', async (req, res) => {
   try {
      const { username, password } = req.body;

      const validation = validateData(loginValidationSchema, req.body);

      if (!validation.isValid) {
         return res.status(400).json(validation.error)
      }

      const user = await getUser(username, password)

      if (user) {
         return res.status(200).json(user)
      }
   } catch (error) {
      console.error(`${timeStampGen()} Error generated by route handler(POST) at ./panel-backend/src/endpoints/login.ts info: ${error}`);
      return res.status(500).json('General Server Error');
   };
});

export default router;