import type { RowDataPacket } from 'mysql2';

import pool from "../../database/connection";
import { timeStampGen } from '../../global-helper';
import type { User } from "../../types";


export const getUser = async (username: string, password: string): Promise<User | null> => {
    const poolConn = await pool.getConnection();
    try {
       const [rows] = await poolConn.query<RowDataPacket[]>('SELECT id, username, password, role FROM users WHERE username = ? AND password = ?', 
                                                            [username, password]);
       
       if (rows.length > 0) {
          return {
                id: rows[0].id,
                name: rows[0].username,
                role: rows[0].role
          };
       }
       
       return null;

    } catch (error) {
        console.error(`${timeStampGen()} Error generated by route handler(POST) at ./panel-backend/src/endpoints/login.ts info: ${error}`);
        return null
    } finally {
        poolConn.release();
    }
}

export const getUsers = async (): Promise<User[] | null> => {
    const poolConn = await pool.getConnection();
    try {
       const [rows] = await poolConn.query<RowDataPacket[]>('SELECT * FROM users;');
       
       if (rows.length > 0) {
         
        const users = rows.map((row) => ({
            id: row.id,
            name: row.name,
            password: 'placeholder-choco',
            role: row.role,
            note: row.note
        }));
        
        return users;
       } else {
            return [];
       }

    } catch (error) {
        console.error(`${timeStampGen()} Error generated by route handler(POST) at ./panel-backend/src/endpoints/login.ts info: ${error}`);
        return null;
    } finally {
        poolConn.release();
    }
}
